<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Btn_最大.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>